stages:
  - flutter_setup
  - code_analyze_check
  - build
  - deploy

default:
  interruptible: true
  tags:
    - swat-runner
  cache:
    - key: ${CI_COMMIT_SHA}_pub-cache
      paths:
        - $CI_PROJECT_DIR/.pub-cache/
    - key: ${CI_COMMIT_SHA}_generate-files
      paths:
        - $CI_PROJECT_DIR/lib/**/*.g.dart
    - key: ${CI_COMMIT_SHA}_gen
      paths:
        - $CI_PROJECT_DIR/lib/gen/
    - key: ${CI_COMMIT_SHA}_localization
      paths:
        - $CI_PROJECT_DIR/resources/

.before_script_template: &mobileBeforeScript
  before_script:
    - sh .setup_app.sh
    - flutter pub global activate pubspec_version
    - FLUTTER_VERSION=`flutter pub global run pubspec_version:pubver get`
    - export BUILD_VERSION=$(echo $FLUTTER_VERSION | cut -d "+" -f1)
    - export BUILD_NUMBER=$(echo $FLUTTER_VERSION | cut -d "+" -f2)
    - echo Build Version $BUILD_VERSION
    - echo Build Number $BUILD_NUMBER

flutter_setup:
  stage: flutter_setup
  script:
    - brew tap leoafarias/fvm
    - brew install fvm
    - echo Y | fvm global 3.10.0
    - fvm flutter pub get
    - fvm flutter doctor -v

code_analyze_check:
  stage: code_analyze_check
  needs: [ flutter_setup ]
  <<: *mobileBeforeScript
  script:
    - sh scripts/.code_analyze.sh
  artifacts:
    reports:
      codequality: code-quality-report.json

diawi_android_dev: 
  stage: build 
  needs: [ code_analyze_check ]
  allow_failure: true 
  <<: *mobileBeforeScript
  variables:
    BUILD_FLAVOR_KEY: "dev"
  script:
    - sh scripts/.setup_gitlab_env_fastlane.sh $BUILD_FLAVOR_KEY
    - sh scripts/.setup_fastlane.sh
    - sh scripts/.setup_env_gradle.sh
    - sh scripts/.setup_credential_cicd.sh
    - bundle exec fastlane buildAndroid --env $BUILD_FLAVOR_KEY 
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
      when: on_success
    - if: $CI_COMMIT_BRANCH =~ "/^bugfix/.*$/" || $CI_COMMIT_BRANCH =~ "/^feature/.*$/" || $CI_COMMIT_BRANCH =~ "/^update/.*$/" || $CI_COMMIT_BRANCH =~ "/^improve/.*$/" 
      when: manual

auto_diawi_android_staging: 
  stage: build 
  allow_failure: true 
  needs: [ code_analyze_check ]
  <<: *mobileBeforeScript
  variables:
    BUILD_FLAVOR_KEY: "staging"
  script:
    - sh scripts/.setup_gitlab_env_fastlane.sh $BUILD_FLAVOR_KEY
    - sh scripts/.setup_fastlane.sh
    - sh scripts/.setup_env_gradle.sh
    - sh scripts/.setup_credential_cicd.sh
    - bundle exec fastlane buildAndroid --env $BUILD_FLAVOR_KEY
  artifacts:
    paths:
      - build/app/outputs/flutter-apk/app-staging-release.apk
  only:
    - /^release/.*$/

firebase_android_staging:
  stage: deploy
  when: manual
  needs: [ auto_diawi_android_staging ]
  variables:
    BUILD_FLAVOR_KEY: "staging"  
  script:
    - sh scripts/.setup_gitlab_env_fastlane.sh $BUILD_FLAVOR_KEY
    - sh scripts/.setup_fastlane.sh
    - sh scripts/.setup_credential_cicd.sh
    - bundle exec fastlane firebaseAndroidDistribute --env $BUILD_FLAVOR_KEY
  only:
    - /^release/.*$/

android_production_diawi: 
  stage: build 
  allow_failure: true 
  needs: [ code_analyze_check ]
  <<: *mobileBeforeScript
  variables:
    BUILD_FLAVOR_KEY: "production"  
  script:
    - sh scripts/.setup_gitlab_env_fastlane.sh $BUILD_FLAVOR_KEY
    - sh scripts/.setup_fastlane.sh
    - sh scripts/.setup_env_gradle.sh
    - sh scripts/.setup_credential_cicd.sh
    - bundle exec fastlane buildAndroid --env $BUILD_FLAVOR_KEY
  artifacts:
    paths:
      - build/app/outputs/flutter-apk/app-production-release.apk
  only:
    - master
    - feature/hoangnvm/ci-cd-setup-for-android-production   

deploy_app_center_android_staging: 
  stage: deploy
  when: manual
  needs: [ auto_diawi_android_staging ]
  variables:
    BUILD_FLAVOR_KEY: "staging"  
  script:
    - sh scripts/.setup_gitlab_env_fastlane.sh $BUILD_FLAVOR_KEY
    - sh scripts/.setup_fastlane.sh
    - bundle exec fastlane android appCenterAndroidDistribute --env $BUILD_FLAVOR_KEY
  only:
    - /^release/.*$/    

diawi_ios_dev: 
  stage: build 
  allow_failure: true 
  needs: [ code_analyze_check ]
  <<: *mobileBeforeScript
  variables:
    BUILD_FLAVOR_KEY: "dev"  
  script:
    - sh scripts/.setup_gitlab_env_fastlane.sh $BUILD_FLAVOR_KEY
    - sh scripts/.setup_fastlane.sh
    - sh scripts/.setup_ios_precache.sh
    - sh scripts/.setup_credential_cicd.sh
    - bundle exec fastlane ios buildIOS --env $BUILD_FLAVOR_KEY --verbose  
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
      when: on_success
    - if: $CI_COMMIT_BRANCH =~ "/^bugfix/.*$/" || $CI_COMMIT_BRANCH =~ "/^feature/.*$/" || $CI_COMMIT_BRANCH =~ "/^update/.*$/" || $CI_COMMIT_BRANCH =~ "/^improve/.*$/" 
      when: manual

auto_diawi_ios_staging: 
  stage: build 
  allow_failure: true 
  needs: [ code_analyze_check ]
  <<: *mobileBeforeScript
  variables:
    BUILD_FLAVOR_KEY: "staging"  
  script:
    - sh scripts/.setup_gitlab_env_fastlane.sh $BUILD_FLAVOR_KEY
    - sh scripts/.setup_fastlane.sh
    - sh scripts/.setup_ios_precache.sh
    - sh scripts/.setup_credential_cicd.sh
    - bundle exec fastlane ios buildIOS --env $BUILD_FLAVOR_KEY --verbose
  artifacts:
    paths:
      - build/ios/app-staging-release.ipa
  only:
    - /^release/.*$/ 

deploy_app_center_ios_staging: 
  stage: deploy
  when: manual
  needs: [ auto_diawi_ios_staging ]
  variables:
    BUILD_FLAVOR_KEY: "staging"  
  script:
    - sh scripts/.setup_gitlab_env_fastlane.sh $BUILD_FLAVOR_KEY
    - sh scripts/.setup_fastlane.sh
    - bundle exec fastlane ios appCenterIOSDistribute --env $BUILD_FLAVOR_KEY
  only:
    - /^release/.*$/    

ios_production: 
  stage: build 
  allow_failure: true 
  needs: [ code_analyze_check ]
  <<: *mobileBeforeScript
  variables:
    BUILD_FLAVOR_KEY: "production"  
  script:
    - sh scripts/.setup_gitlab_env_fastlane.sh $BUILD_FLAVOR_KEY
    - sh scripts/.setup_fastlane.sh
    - sh scripts/.setup_ios_precache.sh
    - sh scripts/.setup_credential_cicd.sh
    - bundle exec fastlane ios buildIOS --env $BUILD_FLAVOR_KEY --verbose
  artifacts:
    paths:
      - build/ios/app-production-release.ipa
  only:
    - master 

deploy_testflight: 
  stage: deploy
  when: manual
  needs: [ ios_production ]
  variables:
    BUILD_FLAVOR_KEY: "production"  
  script:
    - sh scripts/.setup_gitlab_env_fastlane.sh $BUILD_FLAVOR_KEY
    - sh scripts/.setup_fastlane.sh
    - sh scripts/.setup_credential_cicd.sh
    - bundle exec fastlane ios testFlightDistribute --env $BUILD_FLAVOR_KEY
  only:
    - master 