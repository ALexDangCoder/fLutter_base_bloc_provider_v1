image: cirrusci/flutter:stable


stages:
  - test
  - build
  - deploy


test:
  stage: test
  when: always
  tags:
    - flutter_build
  before_script:
    - flutter pub get
    - flutter pub run build_runner build --delete-conflicting-outputs
    - flutter pub global activate pubspec_version
    - flutter pub global activate intl_utils
    - flutter pub global run intl_utils:generate
  script:
    - flutter analyze
    - flutter test --coverage
  only:
    - /^bugfix/.*$/
    - /^feature/.*$/
    - /^hotfix/.*$/
    - develop

build_android_dev: #Job name
  stage: build # kind of job
  when: manual
  allow_failure: false #Make to skip build step and deploy step
  needs:
    - test
  before_script:
    - flutter pub get
    - flutter pub run build_runner build --delete-conflicting-outputs
    - flutter pub global activate pubspec_version
    - flutter pub global activate intl_utils
    - flutter pub global run intl_utils:generate
    - export SLACK_WEBHOOK_URL="https://hooks.slack.com/services/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"
  script:
    - flutter build apk --flavor development
    - export PAYLOAD=$(echo 'payload={"username":"App Deployment","attachments":[{"fallback":"New build for Android is out!", "actions":[{"type":"button","text":"See Commits","url":"https://git.vmo.dev/c3/flutter-temp/commits/'$CI_BUILD_REF_NAME'#commit-'$CI_COMMIT_SHORT_SHA'"},{"type":"button","text":"View Pipeline","url":"https://git.vmo.dev/c3/flutter-temp/pipelines/'$CI_PIPELINE_ID'"},{"type":"button","text":"Download APK","url":"'$CI_JOB_URL'/artifacts/build/app/outputs/flutter-apk/app-development-release.apk"}],"fields":[{"title":"Last Commit", "value":"'$CI_COMMIT_TITLE'","short":false},{"title":"Branch", "value":"'$CI_BUILD_REF_NAME'","short":false},"footer":"Build triggered by '$GITLAB_USER_NAME' | SHA':' '$CI_COMMIT_SHORT_SHA'"}]}')
    - curl -X POST --data-urlencode "$PAYLOAD" $SLACK_WEBHOOK_URL
  artifacts:
    paths:
      - build/app/outputs/flutter-apk/app-development-release.apk
  tags:
    - flutter_build
  only:
    - /^bugfix/.*$/
    - /^feature/.*$/
    - /^hotfix/.*$/
    - develop

deploy_android_dev:
  image: node:latest
  stage: deploy
  when: manual

  needs:
    - build_android_dev
  script:
    - npm install -g appcenter-cli
    - appcenter login --token $APP_CENTER_TOKEN
    - appcenter apps set-current $APP_CENTER_PROJECT_NAME
    - appcenter distribute release -f build/app/outputs/flutter-apk/app-development-release.apk -g Collaborators
  tags:
    - flutter_build
  only:
    - /^bugfix/.*$/
    - /^feature/.*$/
    - /^hotfix/.*$/
    - develop

build_android_staging:
  stage: build
  when: manual
  allow_failure: false
  needs:
    - test
  before_script:
    - flutter pub get
    - flutter pub run build_runner build --delete-conflicting-outputs
    - flutter pub global activate pubspec_version
    - flutter pub global activate intl_utils
    - flutter pub global run intl_utils:generate
  script:
    - flutter build apk --flavor staging
  artifacts:
    paths:
      - build/app/outputs/flutter-apk/app-staging-release.apk
  tags:
    - flutter_build
  only:
    - /^release/.*$/

deploy_android_staging:
  image: node:latest
  stage: deploy
  when: manual

  needs:
    - build_android_staging
  script:
    - npm install -g appcenter-cli
    - appcenter login --token $APP_CENTER_TOKEN
    - appcenter apps set-current $APP_CENTER_PROJECT_NAME
    - appcenter distribute release -f build/app/outputs/flutter-apk/app-staging-release.apk -g Collaborators
  tags:
    - flutter_build
  only:
    - /^release/.*$/

build_android_production:
  stage: build
  when: manual
  allow_failure: false

  needs:
    - test
  before_script:
    - flutter pub get
    - flutter pub run build_runner build --delete-conflicting-outputs
    - flutter pub global activate pubspec_version
    - flutter pub global activate intl_utils
    - flutter pub global run intl_utils:generate
  script:
    - flutter build apk --flavor production
  artifacts:
    paths:
      - build/app/outputs/flutter-apk/app-production-release.apk
  tags:
    - flutter_build
  only:
    - master

deploy_android_production:
  image: node:latest
  stage: deploy
  when: manual

  needs:
    - build_android_production
  script:
    - npm install -g appcenter-cli
    - appcenter login --token $APP_CENTER_TOKEN
    - appcenter apps set-current $APP_CENTER_PROJECT_NAME
    - appcenter distribute release -f build/app/outputs/flutter-apk/app-production-release.apk -g Collaborators
  tags:
    - flutter_build
  only:
    - master

