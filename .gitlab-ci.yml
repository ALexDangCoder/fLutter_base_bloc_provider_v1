image: cirrusci/flutter:stable

stages:
  - test
  - build
  - deploy

.before_script_template: &mobileBeforeScript
  before_script:
    - sh .setup_app.sh
    - flutter pub global activate pubspec_version
    - FLUTTER_VERSION=`flutter pub global run pubspec_version:pubver get`
    - export BUILD_VERSION=$(echo $FLUTTER_VERSION | cut -d "+" -f1)
    - export BUILD_NUMBER=$(echo $FLUTTER_VERSION | cut -d "+" -f2)
    - echo Build Version $BUILD_VERSION
    - echo Build Number $BUILD_NUMBER

test:
  stage: test
  when: always
  tags:
    - vmogroup

  <<: *mobileBeforeScript

  script:
    - flutter format . --set-exit-if-changed
    - flutter analyze
  only:
    - /^bugfix/.*$/
    - /^feature/.*$/
    - /^hotfix/.*$/
    - /^update/.*$/
    - develop

.build_android_dev: #Job name
  stage: build # kind of job
  when: manual
  allow_failure: true #Make to skip build step and deploy step

  <<: *mobileBeforeScript

  script:
    # These step is set-up for distribute to slack app and google chat
    - export BUILD_FLAVOR="Dev"
    - export BUILD_FLAVOR_KEY="development"
    - flutter build apk --flavor $BUILD_FLAVOR_KEY --build-number $BUILD_NUMBER
    #    - export PAYLOAD=$(echo 'payload={"username":"Flutter Temp","attachments":[{"fallback":"New app build for Android is out!", "actions":[{"type":"button","text":"See Commits","url":"https://git.vmo.dev/c3/flutter-temp/commits/'$CI_BUILD_REF_NAME'#commit-'$CI_COMMIT_SHORT_SHA'"},{"type":"button","text":"View Pipeline","url":"https://git.vmo.dev/c3/flutter-temp/pipelines/'$CI_PIPELINE_ID'"},{"type":"button","text":"Download APK","url":"'$CI_JOB_URL'/artifacts/raw/build/app/outputs/flutter-apk/app-development-release.apk"}],"pretext":"New Android build is out!","fields":[{"title":"Last Commit", "value":"'$CI_COMMIT_TITLE'","short":false},{"title":"Branch", "value":"'$CI_BUILD_REF_NAME'","short":false},{"title":"Flavor", "value":"'$BUILD_FLAVOR'","short":true},{"title":"Version Code", "value":"'$BUILD_NUMBER'","short":true},{"title":"Version", "value":"'$BUILD_VERSION'","short":true}],"footer":"Build triggered by '$GITLAB_USER_NAME' | SHA':' '$CI_COMMIT_SHORT_SHA'"}]}')
    #    - curl -X POST --data-urlencode "$PAYLOAD" $SLACK_WEBHOOK_URL
    - |-
      PAYLOAD=$(cat << JSON
      {
      "cards": [
        {
          "sections": [
            {
              "widgets": [
                {
                  "keyValue": {
                    "topLabel": "<b>Branch</b>",
                    "content": "$CI_BUILD_REF_NAME",
                    "contentMultiline": "true",
                  }
                },
                {
                  "keyValue": {
                    "topLabel": "<b>Commit</b>",
                    "content": "$CI_COMMIT_TITLE",
                    "contentMultiline": "false",
                    "bottomLabel": "By <b>$GITLAB_USER_NAME</b>"
                  }
                },
                {
                  "keyValue": {
                    "topLabel": "<b>Build version</b> $BUILD_VERSION",
                    "content": "<b>Build number</b> $BUILD_NUMBER",
                    "contentMultiline": "false",
                    "bottomLabel": "<b>Flavor</b> $BUILD_FLAVOR_KEY"
                  }
                }
              ]
            },
            {
              "widgets": [
                {
                  "buttons": [
                    {
                      "textButton": {
                        "text": "<b>DOWNLOAD HERE</b>",
                        "onClick": {
                          "openLink": {
                            "url": "$CI_JOB_URL/artifacts/raw/build/app/outputs/flutter-apk/app-development-release.apk"
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
      }
      JSON
      )
    - echo "$PAYLOAD"
    - >
      http_response=$(curl --location --request POST "${CHAT_URL}"
      --header "${CONTENT}"
      --data-raw "${PAYLOAD}")

  artifacts:
    paths:
      - build/app/outputs/flutter-apk/app-development-release.apk
  tags:
    - vmogroup
  only:
    - /^bugfix/.*$/
    - /^feature/.*$/
    - /^hotfix/.*$/
    - /^update/.*$/
    - develop

diawi_android_dev: #Job name
  stage: build # kind of job
  when: manual
  allow_failure: true #Make to skip build step and deploy step
  needs: [test]

  <<: *mobileBeforeScript

  script:
    # These step is set-up for distribute to slack app and google chat
    - export BUILD_FLAVOR="Dev"
    - export BUILD_FLAVOR_KEY="development"
    - sh .setup_env_config.sh $BUILD_FLAVOR_KEY
    - flutter build apk --flavor $BUILD_FLAVOR_KEY --build-number $BUILD_NUMBER
    - sh .setup_fastlane.sh
    - bundle exec fastlane sendBuildToGoogleChat --env $BUILD_FLAVOR_KEY

  tags:
    - vops-runner
  only:
    - /^bugfix/.*$/
    - /^feature/.*$/
    - /^hotfix/.*$/
    - /^update/.*$/
    - develop

diawi_android_staging: #Job name
  stage: build # kind of job
  when: manual
  allow_failure: true #Make to skip build step and deploy step
  needs: [test]

  <<: *mobileBeforeScript

  script:
    # These step is set-up for distribute to slack app and google chat
    - export BUILD_FLAVOR="Staging"
    - export BUILD_FLAVOR_KEY="staging"
    - sh .setup_env_config.sh $BUILD_FLAVOR_KEY
    - flutter build apk --flavor $BUILD_FLAVOR_KEY --build-number $BUILD_NUMBER
    - sh .setup_fastlane.sh
    - bundle exec fastlane sendBuildToGoogleChat --env $BUILD_FLAVOR_KEY

  artifacts:
    paths:
      - build/app/outputs/flutter-apk/app-staging-release.apk
  tags:
    - vops-runner
  only:
    - /^bugfix/.*$/
    - /^feature/.*$/
    - /^hotfix/.*$/
    - /^update/.*$/
    - develop

firebase_android_staging:
  stage: deploy
  when: manual
  needs: [diawi_android_staging]
  dependencies:
    - diawi_android_staging
  script:
    - export BUILD_FLAVOR_KEY="staging"
    - sh .setup_fastlane.sh
    - bundle exec fastlane distribute --env $BUILD_FLAVOR_KEY
  tags:
    - vmogroup
  only:
    - /^release/.*$/
    - /^update/.*$/
    - /^hotfix/.*$/

.build_ios_dev:
  when: manual
  stage: build
  allow_failure: true
  #  needs:
  #    - test

  <<: *mobileBeforeScript

  script:
    - export BUILD_FLAVOR="Dev"
    - export BUILD_FLAVOR_KEY="development"
    - export PAYLOAD=$(echo 'payload={"username":"Flutter Temp","attachments":[{"fallback":"New app build for IOS is out!", "actions":[{"type":"button","text":"See Commits","url":"https://git.vmo.dev/c3/flutter-temp/commits/'$CI_BUILD_REF_NAME'#commit-'$CI_COMMIT_SHORT_SHA'"},{"type":"button","text":"View Pipeline","url":"https://git.vmo.dev/c3/flutter-temp/pipelines/'$CI_PIPELINE_ID'"},{"type":"button","text":"Download IPA","url":"'$CI_JOB_URL'/artifacts/raw/ios/build/Runner.ipa"}],"pretext":"New IOS build is out!","fields":[{"title":"Last Commit", "value":"'$CI_COMMIT_TITLE'","short":false},{"title":"Branch", "value":"'$CI_BUILD_REF_NAME'","short":false},{"title":"Flavor", "value":"'$BUILD_FLAVOR'","short":true},{"title":"Version Code", "value":"'$BUILD_NUMBER'","short":true},{"title":"Version", "value":"'$BUILD_VERSION'","short":true}],"footer":"Build triggered by '$GITLAB_USER_NAME' | SHA':' '$CI_COMMIT_SHORT_SHA'"}]}')
    - flutter build ios --flavor $BUILD_FLAVOR_KEY
    - if [ -d archive ]; then rm -rf archive; fi && mkdir archive
    - if [ -d artifact ]; then rm -rf artifact; fi && mkdir artifact
    - cd ios
    - xcodebuild clean archive -workspace Runner.xcworkspace -scheme Runner -archivePath RunnerArchive
    - xcodebuild -exportArchive -archivePath RunnerArchive.xcarchive -exportOptionsPlist ExportOptions.plist -exportPath ./build
    - curl -X POST --data-urlencode "$PAYLOAD" $SLACK_WEBHOOK_URL
  artifacts:
    paths:
      - ios/build/Runner.ipa
  tags:
    - vmogroup
  only:
    - /^bugfix/.*$/
    - /^feature/.*$/
    - /^hotfix/.*$/
    - /^update/.*$/
    - develop
